import BookRepository from '../repositories/bookRepository.js';
import Book from '../models/book.js';
import express from 'express';

class BookController {
    constructor() {
        this.bookRepository = new BookRepository();
        this.router = express.Router();
        this.router.get('/', (request, response) => this.getAllBooks(request, response) );
        this.router.get('/:id', (request, response, next) => this.getBook(request, response, next) );
        this.router.post('/', (request, response) => this.addBook(request, response) );
    }

    getAllBooks(request, response) {
      
        this.bookRepository.getAllBooks()
            .then(books => {
                response.status(200).send(books);
            })
            .catch(error => BookController.errorResponse(response, error));
    }

    getBook(request, response, next) {
        const id = request.params.id;
        // TODO - get one book from repository
        throw "getBook not yet implemented"
    }

    addBook(request, response) {
       throw "addBook is not yet implemented";
       // TODO ask repository to add book and get its id
    }

    static errorResponse(response, error) {
        response.status(500).send({ errors: [error.message]})
    }

    static getBookFromRequest(request) {

        if ( request.body &&
             'title' in request.body &&
             'author' in request.body
        ) {
            const title = request.body.title;
            const author = request.body.author;
            const isbn = ( 'isbn' in request.body) ? request.body.isbn : null;
               
            // id is generated by db, so currently unknown
            const book =  new Book(null, title, author, isbn);
            console.log ("book to add " + JSON.stringify(book) );
            return book;
        } else {
            return null;
        }
    }


}

export default new BookController().router;
